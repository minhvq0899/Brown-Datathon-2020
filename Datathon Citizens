{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Datathon Citizens","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"Pml9hE-KXPlH","colab_type":"code","outputId":"00807d20-fa3f-4673-ec3b-d97ef2e7c08f","executionInfo":{"status":"ok","timestamp":1582417519584,"user_tz":300,"elapsed":21492,"user":{"displayName":"Jiamin Tang","photoUrl":"","userId":"08564089869726489495"}},"colab":{"base_uri":"https://localhost:8080/","height":124}},"source":["# Make necessary/useful imports here\n","import pandas as pd\n","import random\n","import numpy as np\n","import datetime as dt\n","import matplotlib.pyplot as plt\n","import matplotlib.cm\n","from sklearn import metrics\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import confusion_matrix\n","\n","# Set pandas options to not truncate\n","pd.set_option('display.max_rows', None)\n","pd.set_option('display.max_columns', None)\n","pd.set_option('display.width', None)\n","pd.set_option('display.max_colwidth', -1)\n","\n","# Mount data \n","from google.colab import drive\n","\n","drive.mount(\"/content/gdrive\", force_remount=True)\n","root_path = 'gdrive/My Drive/Datathon Citizens/data/'\n","\n"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&response_type=code&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly\n","\n","Enter your authorization code:\n","··········\n","Mounted at /content/gdrive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"nywvnuctID9J","colab_type":"code","outputId":"4ebb11ff-951a-4302-d0d3-2ad1730693b0","executionInfo":{"status":"error","timestamp":1582417774481,"user_tz":300,"elapsed":3716,"user":{"displayName":"Khoa Ngo the","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mAf2R8b3AXmJXw-qrPiLb4Sa0CgHWBqnucK8_xrhQ=s64","userId":"10861811657848698750"}},"colab":{"base_uri":"https://localhost:8080/","height":443}},"source":["#demo_df = pd.read_csv(root_path + \"zip9_demographics_coded_pv.csv\", engine = 'python')\n","demo_df = pd.read_csv(root_path + \"zip9_demographics_coded_pv.csv\")"],"execution_count":0,"outputs":[{"output_type":"error","ename":"ParserError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mParserError\u001b[0m                               Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-c660e6f8882c>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mdemo_df\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mroot_path\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m\"zip9_demographics_coded_pv.csv\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36mparser_f\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, dialect, error_bad_lines, warn_bad_lines, delim_whitespace, low_memory, memory_map, float_precision)\u001b[0m\n\u001b[1;32m    683\u001b[0m         )\n\u001b[1;32m    684\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 685\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    686\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    687\u001b[0m     \u001b[0mparser_f\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__name__\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    455\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    456\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 457\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfp_or_buf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    458\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    459\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m    893\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptions\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"has_index_names\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"has_index_names\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    894\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 895\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    896\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    897\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, engine)\u001b[0m\n\u001b[1;32m   1133\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mengine\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"c\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1134\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mengine\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"c\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1135\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mCParserWrapper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptions\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1136\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1137\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mengine\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"python\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, src, **kwds)\u001b[0m\n\u001b[1;32m   1915\u001b[0m         \u001b[0mkwds\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"usecols\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0musecols\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1916\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1917\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reader\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mparsers\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTextReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msrc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1918\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munnamed_cols\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reader\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munnamed_cols\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1919\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32mpandas/_libs/parsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.TextReader.__cinit__\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/parsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.TextReader._get_header\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/parsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.TextReader._tokenize_rows\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/parsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.raise_parser_error\u001b[0;34m()\u001b[0m\n","\u001b[0;31mParserError\u001b[0m: Error tokenizing data. C error: Calling read(nbytes) on source failed. Try engine='python'."]}]},{"cell_type":"code","metadata":{"id":"uUeK6xYekwHi","colab_type":"code","outputId":"bdb51c6c-43fa-4ef2-831b-9947f59ccaf9","executionInfo":{"status":"error","timestamp":1582412234112,"user_tz":300,"elapsed":16962,"user":{"displayName":"Minh Vu Quang","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mA_c7cm_kUgErEkY1tj7MCD4NT4_bW31H0wbB5TNg=s64","userId":"05731545289915676825"}},"colab":{"base_uri":"https://localhost:8080/","height":510}},"source":["n = 6009259 # number of records in file\n","s = 60000 # sample size (can/should be changed to your preference)\n","\n","skip_list = sorted(random.sample(range(1,n+1),n-s))\n","\n","demo_df = pd.read_csv(root_path + \"zip9_demographics_coded_pv.csv\")\n","\n","# Take a look at a few examples in the September credit bureau snapshot\n","demo_df.shape"],"execution_count":0,"outputs":[{"output_type":"error","ename":"ParserError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mParserError\u001b[0m                               Traceback (most recent call last)","\u001b[0;32m<ipython-input-16-07ebd08e08a2>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mskip_list\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msorted\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrandom\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msample\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mn\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mn\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0ms\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m \u001b[0mdemo_df\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mroot_path\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m\"zip9_demographics_coded_pv.csv\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      7\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m \u001b[0;31m# Take a look at a few examples in the September credit bureau snapshot\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36mparser_f\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, dialect, error_bad_lines, warn_bad_lines, delim_whitespace, low_memory, memory_map, float_precision)\u001b[0m\n\u001b[1;32m    683\u001b[0m         )\n\u001b[1;32m    684\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 685\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    686\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    687\u001b[0m     \u001b[0mparser_f\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__name__\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    455\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    456\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 457\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfp_or_buf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    458\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    459\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m    893\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptions\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"has_index_names\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"has_index_names\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    894\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 895\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    896\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    897\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, engine)\u001b[0m\n\u001b[1;32m   1133\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mengine\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"c\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1134\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mengine\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"c\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1135\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mCParserWrapper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptions\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1136\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1137\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mengine\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"python\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, src, **kwds)\u001b[0m\n\u001b[1;32m   1915\u001b[0m         \u001b[0mkwds\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"usecols\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0musecols\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1916\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1917\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reader\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mparsers\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTextReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msrc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1918\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munnamed_cols\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reader\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munnamed_cols\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1919\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32mpandas/_libs/parsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.TextReader.__cinit__\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/parsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.TextReader._get_header\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/parsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.TextReader._tokenize_rows\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/parsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.raise_parser_error\u001b[0;34m()\u001b[0m\n","\u001b[0;31mParserError\u001b[0m: Error tokenizing data. C error: Calling read(nbytes) on source failed. Try engine='python'."]}]},{"cell_type":"code","metadata":{"id":"3qkmXimQqStY","colab_type":"code","outputId":"71dba2fa-254b-4bc6-86f1-d363ba1b6abc","executionInfo":{"status":"ok","timestamp":1582405460303,"user_tz":300,"elapsed":505,"user":{"displayName":"Qinyun Wu","photoUrl":"","userId":"06528085215566785782"}},"colab":{"base_uri":"https://localhost:8080/","height":224}},"source":["apr_demo_merge = sep_df.merge(demo_df,\n","                              how='inner',\n","                              on='zip9_code',\n","                              suffixes=('_apr','_demo'),\n","                              validate='one_to_one')\n","apr_demo_merge.head()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>zip5_apr</th>\n","      <th>zip9_code</th>\n","      <th>bankcard_limit</th>\n","      <th>bankcard_balance</th>\n","      <th>bankcard_trades</th>\n","      <th>bankcard_util</th>\n","      <th>total_revolving_limit</th>\n","      <th>total_revolving_balance</th>\n","      <th>total_revolving_trades</th>\n","      <th>total_revolving_util</th>\n","      <th>mortgage1_limit</th>\n","      <th>mortgage1_balance</th>\n","      <th>mortgage1_open</th>\n","      <th>mortgage2_limit</th>\n","      <th>mortgage2_balance</th>\n","      <th>mortgage2_open</th>\n","      <th>mortgage3_limit</th>\n","      <th>mortgage3_balance</th>\n","      <th>mortgage3_open</th>\n","      <th>mortgage4_limit</th>\n","      <th>mortgage4_balance</th>\n","      <th>mortgage4_open</th>\n","      <th>mortgage5_limit</th>\n","      <th>mortgage5_balance</th>\n","      <th>mortgage5_open</th>\n","      <th>total_mortgage_limit</th>\n","      <th>total_mortgage_balance</th>\n","      <th>total_mortgage_trades</th>\n","      <th>mortgage1_loan_to_value</th>\n","      <th>homeequity1_limit</th>\n","      <th>homeequity1_balance</th>\n","      <th>homeequity1_open</th>\n","      <th>homeequity2_limit</th>\n","      <th>homeequity2_balance</th>\n","      <th>homeequity2_open</th>\n","      <th>homeequity3_limit</th>\n","      <th>homeequity3_balance</th>\n","      <th>homeequity3_open</th>\n","      <th>homeequity4_limit</th>\n","      <th>homeequity4_balance</th>\n","      <th>homeequity4_open</th>\n","      <th>homeequity5_limit</th>\n","      <th>homeequity5_balance</th>\n","      <th>homeequity5_open</th>\n","      <th>total_homeequity_limit</th>\n","      <th>total_homeequity_balance</th>\n","      <th>total_homeequity_trades</th>\n","      <th>homeequity1_loan_to_value</th>\n","      <th>autoloan_open</th>\n","      <th>studentloan_open</th>\n","      <th>bankcard_open</th>\n","      <th>homeequity_open</th>\n","      <th>mortgage_open</th>\n","      <th>zip5_demo</th>\n","      <th>age</th>\n","      <th>household_count</th>\n","      <th>person_count</th>\n","      <th>homebuyers</th>\n","      <th>first_homebuyers</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>01057</td>\n","      <td>4975263</td>\n","      <td>16903.050000</td>\n","      <td>4924.775000</td>\n","      <td>2.250000</td>\n","      <td>0.367253</td>\n","      <td>25267.050000</td>\n","      <td>8855.425000</td>\n","      <td>3.875000</td>\n","      <td>0.405035</td>\n","      <td>138406.30</td>\n","      <td>113202.50</td>\n","      <td>0.500000</td>\n","      <td>178110.0</td>\n","      <td>141415.5</td>\n","      <td>0.050000</td>\n","      <td>96500.0</td>\n","      <td>40304.333333</td>\n","      <td>0.075</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>170692.30</td>\n","      <td>133389.70</td>\n","      <td>0.625000</td>\n","      <td>79.7</td>\n","      <td>53764.285714</td>\n","      <td>32551.142857</td>\n","      <td>0.175000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>53764.285714</td>\n","      <td>32551.142857</td>\n","      <td>0.175000</td>\n","      <td>75.571429</td>\n","      <td>0.450000</td>\n","      <td>0.050000</td>\n","      <td>0.775000</td>\n","      <td>0.175000</td>\n","      <td>0.500000</td>\n","      <td>01057</td>\n","      <td>46.644555</td>\n","      <td>22</td>\n","      <td>40</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>01501</td>\n","      <td>1779820</td>\n","      <td>8496.115385</td>\n","      <td>1880.884615</td>\n","      <td>1.615385</td>\n","      <td>0.477126</td>\n","      <td>16088.692308</td>\n","      <td>6010.615385</td>\n","      <td>2.884615</td>\n","      <td>0.403790</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>0.269231</td>\n","      <td>0.153846</td>\n","      <td>0.615385</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>01501</td>\n","      <td>51.030864</td>\n","      <td>14</td>\n","      <td>26</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>01702</td>\n","      <td>1472062</td>\n","      <td>7515.454545</td>\n","      <td>4123.545455</td>\n","      <td>1.909091</td>\n","      <td>0.537993</td>\n","      <td>8417.272727</td>\n","      <td>4220.090909</td>\n","      <td>2.545455</td>\n","      <td>0.497688</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>0.363636</td>\n","      <td>0.272727</td>\n","      <td>0.727273</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>01702</td>\n","      <td>36.550067</td>\n","      <td>9</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>01844</td>\n","      <td>4765095</td>\n","      <td>11559.769231</td>\n","      <td>1426.230769</td>\n","      <td>2.000000</td>\n","      <td>0.467141</td>\n","      <td>24395.692308</td>\n","      <td>5075.000000</td>\n","      <td>3.846154</td>\n","      <td>0.470355</td>\n","      <td>278503.50</td>\n","      <td>235035.00</td>\n","      <td>0.307692</td>\n","      <td>205000.0</td>\n","      <td>135206.0</td>\n","      <td>0.153846</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>381003.50</td>\n","      <td>302638.00</td>\n","      <td>0.461538</td>\n","      <td>81.5</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>0.307692</td>\n","      <td>0.307692</td>\n","      <td>0.692308</td>\n","      <td>0.000000</td>\n","      <td>0.307692</td>\n","      <td>01844</td>\n","      <td>38.347903</td>\n","      <td>8</td>\n","      <td>13</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>01880</td>\n","      <td>2536089</td>\n","      <td>13835.454545</td>\n","      <td>2190.727273</td>\n","      <td>2.272727</td>\n","      <td>0.491954</td>\n","      <td>16785.454545</td>\n","      <td>2592.181818</td>\n","      <td>4.000000</td>\n","      <td>0.427588</td>\n","      <td>252580.25</td>\n","      <td>238870.75</td>\n","      <td>0.363636</td>\n","      <td>377600.0</td>\n","      <td>363656.0</td>\n","      <td>0.090909</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>346980.25</td>\n","      <td>329784.75</td>\n","      <td>0.454545</td>\n","      <td>94.0</td>\n","      <td>40000.000000</td>\n","      <td>38347.000000</td>\n","      <td>0.181818</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>40000.000000</td>\n","      <td>38347.000000</td>\n","      <td>0.181818</td>\n","      <td>96.000000</td>\n","      <td>0.272727</td>\n","      <td>0.272727</td>\n","      <td>0.818182</td>\n","      <td>0.181818</td>\n","      <td>0.363636</td>\n","      <td>01880</td>\n","      <td>47.977679</td>\n","      <td>5</td>\n","      <td>11</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  zip5_apr  zip9_code  bankcard_limit  bankcard_balance  bankcard_trades  \\\n","0  01057    4975263    16903.050000    4924.775000       2.250000          \n","1  01501    1779820    8496.115385     1880.884615       1.615385          \n","2  01702    1472062    7515.454545     4123.545455       1.909091          \n","3  01844    4765095    11559.769231    1426.230769       2.000000          \n","4  01880    2536089    13835.454545    2190.727273       2.272727          \n","\n","   bankcard_util  total_revolving_limit  total_revolving_balance  \\\n","0  0.367253       25267.050000           8855.425000               \n","1  0.477126       16088.692308           6010.615385               \n","2  0.537993       8417.272727            4220.090909               \n","3  0.467141       24395.692308           5075.000000               \n","4  0.491954       16785.454545           2592.181818               \n","\n","   total_revolving_trades  total_revolving_util  mortgage1_limit  \\\n","0  3.875000                0.405035              138406.30         \n","1  2.884615                0.403790             NaN                \n","2  2.545455                0.497688             NaN                \n","3  3.846154                0.470355              278503.50         \n","4  4.000000                0.427588              252580.25         \n","\n","   mortgage1_balance  mortgage1_open  mortgage2_limit  mortgage2_balance  \\\n","0  113202.50          0.500000        178110.0         141415.5            \n","1 NaN                 0.000000       NaN              NaN                  \n","2 NaN                 0.000000       NaN              NaN                  \n","3  235035.00          0.307692        205000.0         135206.0            \n","4  238870.75          0.363636        377600.0         363656.0            \n","\n","   mortgage2_open  mortgage3_limit  mortgage3_balance  mortgage3_open  \\\n","0  0.050000        96500.0          40304.333333       0.075            \n","1  0.000000       NaN              NaN                 0.000            \n","2  0.000000       NaN              NaN                 0.000            \n","3  0.153846       NaN              NaN                 0.000            \n","4  0.090909       NaN              NaN                 0.000            \n","\n","   mortgage4_limit  mortgage4_balance  mortgage4_open  mortgage5_limit  \\\n","0 NaN              NaN                 0.0            NaN                \n","1 NaN              NaN                 0.0            NaN                \n","2 NaN              NaN                 0.0            NaN                \n","3 NaN              NaN                 0.0            NaN                \n","4 NaN              NaN                 0.0            NaN                \n","\n","   mortgage5_balance  mortgage5_open  total_mortgage_limit  \\\n","0 NaN                 0.0             170692.30              \n","1 NaN                 0.0            NaN                     \n","2 NaN                 0.0            NaN                     \n","3 NaN                 0.0             381003.50              \n","4 NaN                 0.0             346980.25              \n","\n","   total_mortgage_balance  total_mortgage_trades  mortgage1_loan_to_value  \\\n","0  133389.70               0.625000               79.7                      \n","1 NaN                      0.000000              NaN                        \n","2 NaN                      0.000000              NaN                        \n","3  302638.00               0.461538               81.5                      \n","4  329784.75               0.454545               94.0                      \n","\n","   homeequity1_limit  homeequity1_balance  homeequity1_open  \\\n","0  53764.285714       32551.142857         0.175000           \n","1 NaN                NaN                   0.000000           \n","2 NaN                NaN                   0.000000           \n","3 NaN                NaN                   0.000000           \n","4  40000.000000       38347.000000         0.181818           \n","\n","   homeequity2_limit  homeequity2_balance  homeequity2_open  \\\n","0 NaN                NaN                   0.0                \n","1 NaN                NaN                   0.0                \n","2 NaN                NaN                   0.0                \n","3 NaN                NaN                   0.0                \n","4 NaN                NaN                   0.0                \n","\n","   homeequity3_limit  homeequity3_balance  homeequity3_open  \\\n","0 NaN                NaN                   0.0                \n","1 NaN                NaN                   0.0                \n","2 NaN                NaN                   0.0                \n","3 NaN                NaN                   0.0                \n","4 NaN                NaN                   0.0                \n","\n","   homeequity4_limit  homeequity4_balance  homeequity4_open  \\\n","0 NaN                NaN                   0.0                \n","1 NaN                NaN                   0.0                \n","2 NaN                NaN                   0.0                \n","3 NaN                NaN                   0.0                \n","4 NaN                NaN                   0.0                \n","\n","   homeequity5_limit  homeequity5_balance  homeequity5_open  \\\n","0 NaN                NaN                   0.0                \n","1 NaN                NaN                   0.0                \n","2 NaN                NaN                   0.0                \n","3 NaN                NaN                   0.0                \n","4 NaN                NaN                   0.0                \n","\n","   total_homeequity_limit  total_homeequity_balance  total_homeequity_trades  \\\n","0  53764.285714            32551.142857              0.175000                  \n","1 NaN                     NaN                        0.000000                  \n","2 NaN                     NaN                        0.000000                  \n","3 NaN                     NaN                        0.000000                  \n","4  40000.000000            38347.000000              0.181818                  \n","\n","   homeequity1_loan_to_value  autoloan_open  studentloan_open  bankcard_open  \\\n","0  75.571429                  0.450000       0.050000          0.775000        \n","1 NaN                         0.269231       0.153846          0.615385        \n","2 NaN                         0.363636       0.272727          0.727273        \n","3 NaN                         0.307692       0.307692          0.692308        \n","4  96.000000                  0.272727       0.272727          0.818182        \n","\n","   homeequity_open  mortgage_open zip5_demo        age  household_count  \\\n","0  0.175000         0.500000       01057     46.644555  22                \n","1  0.000000         0.000000       01501     51.030864  14                \n","2  0.000000         0.000000       01702     36.550067  9                 \n","3  0.000000         0.307692       01844     38.347903  8                 \n","4  0.181818         0.363636       01880     47.977679  5                 \n","\n","   person_count  homebuyers  first_homebuyers  \n","0  40            0           0                 \n","1  26            0           0                 \n","2  11            0           0                 \n","3  13            0           0                 \n","4  11            0           0                 "]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"m6xZ9rTutwBO","colab_type":"code","outputId":"2b6e6612-941c-493e-aac2-686a80d8c7ba","executionInfo":{"status":"ok","timestamp":1582405575668,"user_tz":300,"elapsed":338,"user":{"displayName":"Qinyun Wu","photoUrl":"","userId":"06528085215566785782"}},"colab":{"base_uri":"https://localhost:8080/","height":224}},"source":["majority_missing = ['mortgage2_limit','mortgage2_balance','mortgage3_limit','mortgage3_balance',\n","                    'mortgage4_limit','mortgage4_balance','mortgage5_limit','mortgage5_balance',\n","                    'homeequity1_limit','homeequity1_balance','homeequity2_limit','homeequity2_balance',\n","                    'homeequity3_limit','homeequity3_balance','homeequity4_limit','homeequity4_balance',\n","                    'homeequity5_limit','homeequity5_balance','total_homeequity_limit',\n","                    'total_homeequity_balance','homeequity1_loan_to_value']\n","# Remove exploration, secondary target, and other extra fields\n","other_removals = ['bankcard_balance_decile','first_homebuyers','zip5_sep','zip5_demo','zip9_code'] \n","apr_demo_merge_vars = apr_demo_merge.columns.values.tolist()\n","to_keep = [i for i in apr_demo_merge_vars if i not in majority_missing]\n","to_keep = [i for i in to_keep if i not in other_removals]\n","data_final_apr = apr_demo_merge[to_keep]\n","data_final_apr.head()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>zip5_apr</th>\n","      <th>bankcard_limit</th>\n","      <th>bankcard_balance</th>\n","      <th>bankcard_trades</th>\n","      <th>bankcard_util</th>\n","      <th>total_revolving_limit</th>\n","      <th>total_revolving_balance</th>\n","      <th>total_revolving_trades</th>\n","      <th>total_revolving_util</th>\n","      <th>mortgage1_limit</th>\n","      <th>mortgage1_balance</th>\n","      <th>mortgage1_open</th>\n","      <th>mortgage2_open</th>\n","      <th>mortgage3_open</th>\n","      <th>mortgage4_open</th>\n","      <th>mortgage5_open</th>\n","      <th>total_mortgage_limit</th>\n","      <th>total_mortgage_balance</th>\n","      <th>total_mortgage_trades</th>\n","      <th>mortgage1_loan_to_value</th>\n","      <th>homeequity1_open</th>\n","      <th>homeequity2_open</th>\n","      <th>homeequity3_open</th>\n","      <th>homeequity4_open</th>\n","      <th>homeequity5_open</th>\n","      <th>total_homeequity_trades</th>\n","      <th>autoloan_open</th>\n","      <th>studentloan_open</th>\n","      <th>bankcard_open</th>\n","      <th>homeequity_open</th>\n","      <th>mortgage_open</th>\n","      <th>age</th>\n","      <th>household_count</th>\n","      <th>person_count</th>\n","      <th>homebuyers</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>01057</td>\n","      <td>16903.050000</td>\n","      <td>4924.775000</td>\n","      <td>2.250000</td>\n","      <td>0.367253</td>\n","      <td>25267.050000</td>\n","      <td>8855.425000</td>\n","      <td>3.875000</td>\n","      <td>0.405035</td>\n","      <td>138406.30</td>\n","      <td>113202.50</td>\n","      <td>0.500000</td>\n","      <td>0.050000</td>\n","      <td>0.075</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>170692.30</td>\n","      <td>133389.70</td>\n","      <td>0.625000</td>\n","      <td>79.7</td>\n","      <td>0.175000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.175000</td>\n","      <td>0.450000</td>\n","      <td>0.050000</td>\n","      <td>0.775000</td>\n","      <td>0.175000</td>\n","      <td>0.500000</td>\n","      <td>46.644555</td>\n","      <td>22</td>\n","      <td>40</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>01501</td>\n","      <td>8496.115385</td>\n","      <td>1880.884615</td>\n","      <td>1.615385</td>\n","      <td>0.477126</td>\n","      <td>16088.692308</td>\n","      <td>6010.615385</td>\n","      <td>2.884615</td>\n","      <td>0.403790</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.269231</td>\n","      <td>0.153846</td>\n","      <td>0.615385</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>51.030864</td>\n","      <td>14</td>\n","      <td>26</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>01702</td>\n","      <td>7515.454545</td>\n","      <td>4123.545455</td>\n","      <td>1.909091</td>\n","      <td>0.537993</td>\n","      <td>8417.272727</td>\n","      <td>4220.090909</td>\n","      <td>2.545455</td>\n","      <td>0.497688</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.363636</td>\n","      <td>0.272727</td>\n","      <td>0.727273</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>36.550067</td>\n","      <td>9</td>\n","      <td>11</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>01844</td>\n","      <td>11559.769231</td>\n","      <td>1426.230769</td>\n","      <td>2.000000</td>\n","      <td>0.467141</td>\n","      <td>24395.692308</td>\n","      <td>5075.000000</td>\n","      <td>3.846154</td>\n","      <td>0.470355</td>\n","      <td>278503.50</td>\n","      <td>235035.00</td>\n","      <td>0.307692</td>\n","      <td>0.153846</td>\n","      <td>0.000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>381003.50</td>\n","      <td>302638.00</td>\n","      <td>0.461538</td>\n","      <td>81.5</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.307692</td>\n","      <td>0.307692</td>\n","      <td>0.692308</td>\n","      <td>0.000000</td>\n","      <td>0.307692</td>\n","      <td>38.347903</td>\n","      <td>8</td>\n","      <td>13</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>01880</td>\n","      <td>13835.454545</td>\n","      <td>2190.727273</td>\n","      <td>2.272727</td>\n","      <td>0.491954</td>\n","      <td>16785.454545</td>\n","      <td>2592.181818</td>\n","      <td>4.000000</td>\n","      <td>0.427588</td>\n","      <td>252580.25</td>\n","      <td>238870.75</td>\n","      <td>0.363636</td>\n","      <td>0.090909</td>\n","      <td>0.000</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>346980.25</td>\n","      <td>329784.75</td>\n","      <td>0.454545</td>\n","      <td>94.0</td>\n","      <td>0.181818</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.181818</td>\n","      <td>0.272727</td>\n","      <td>0.272727</td>\n","      <td>0.818182</td>\n","      <td>0.181818</td>\n","      <td>0.363636</td>\n","      <td>47.977679</td>\n","      <td>5</td>\n","      <td>11</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  zip5_apr  bankcard_limit  bankcard_balance  bankcard_trades  bankcard_util  \\\n","0  01057    16903.050000    4924.775000       2.250000         0.367253        \n","1  01501    8496.115385     1880.884615       1.615385         0.477126        \n","2  01702    7515.454545     4123.545455       1.909091         0.537993        \n","3  01844    11559.769231    1426.230769       2.000000         0.467141        \n","4  01880    13835.454545    2190.727273       2.272727         0.491954        \n","\n","   total_revolving_limit  total_revolving_balance  total_revolving_trades  \\\n","0  25267.050000           8855.425000              3.875000                 \n","1  16088.692308           6010.615385              2.884615                 \n","2  8417.272727            4220.090909              2.545455                 \n","3  24395.692308           5075.000000              3.846154                 \n","4  16785.454545           2592.181818              4.000000                 \n","\n","   total_revolving_util  mortgage1_limit  mortgage1_balance  mortgage1_open  \\\n","0  0.405035              138406.30        113202.50          0.500000         \n","1  0.403790             NaN              NaN                 0.000000         \n","2  0.497688             NaN              NaN                 0.000000         \n","3  0.470355              278503.50        235035.00          0.307692         \n","4  0.427588              252580.25        238870.75          0.363636         \n","\n","   mortgage2_open  mortgage3_open  mortgage4_open  mortgage5_open  \\\n","0  0.050000        0.075           0.0             0.0              \n","1  0.000000        0.000           0.0             0.0              \n","2  0.000000        0.000           0.0             0.0              \n","3  0.153846        0.000           0.0             0.0              \n","4  0.090909        0.000           0.0             0.0              \n","\n","   total_mortgage_limit  total_mortgage_balance  total_mortgage_trades  \\\n","0  170692.30             133389.70               0.625000                \n","1 NaN                   NaN                      0.000000                \n","2 NaN                   NaN                      0.000000                \n","3  381003.50             302638.00               0.461538                \n","4  346980.25             329784.75               0.454545                \n","\n","   mortgage1_loan_to_value  homeequity1_open  homeequity2_open  \\\n","0  79.7                     0.175000          0.0                \n","1 NaN                       0.000000          0.0                \n","2 NaN                       0.000000          0.0                \n","3  81.5                     0.000000          0.0                \n","4  94.0                     0.181818          0.0                \n","\n","   homeequity3_open  homeequity4_open  homeequity5_open  \\\n","0  0.0               0.0               0.0                \n","1  0.0               0.0               0.0                \n","2  0.0               0.0               0.0                \n","3  0.0               0.0               0.0                \n","4  0.0               0.0               0.0                \n","\n","   total_homeequity_trades  autoloan_open  studentloan_open  bankcard_open  \\\n","0  0.175000                 0.450000       0.050000          0.775000        \n","1  0.000000                 0.269231       0.153846          0.615385        \n","2  0.000000                 0.363636       0.272727          0.727273        \n","3  0.000000                 0.307692       0.307692          0.692308        \n","4  0.181818                 0.272727       0.272727          0.818182        \n","\n","   homeequity_open  mortgage_open        age  household_count  person_count  \\\n","0  0.175000         0.500000       46.644555  22               40             \n","1  0.000000         0.000000       51.030864  14               26             \n","2  0.000000         0.000000       36.550067  9                11             \n","3  0.000000         0.307692       38.347903  8                13             \n","4  0.181818         0.363636       47.977679  5                11             \n","\n","   homebuyers  \n","0  0           \n","1  0           \n","2  0           \n","3  0           \n","4  0           "]},"metadata":{"tags":[]},"execution_count":17}]},{"cell_type":"code","metadata":{"id":"LH7BvHGUwqCJ","colab_type":"code","outputId":"ea891b82-3f09-4a94-fd58-dd473b4acba8","executionInfo":{"status":"ok","timestamp":1582406282680,"user_tz":300,"elapsed":356,"user":{"displayName":"Qinyun Wu","photoUrl":"","userId":"06528085215566785782"}},"colab":{"base_uri":"https://localhost:8080/","height":646}},"source":["print(data_final_apr.isnull().sum(axis=0)/data_final_apr.shape[0])\n","print(sum(data_final_apr.isnull().sum(axis=1)!=0)/data_final_apr.shape[0])"],"execution_count":0,"outputs":[{"output_type":"stream","text":["zip5_apr                   0.000000\n","bankcard_limit             0.000000\n","bankcard_balance           0.000000\n","bankcard_trades            0.000000\n","bankcard_util              0.006623\n","total_revolving_limit      0.000000\n","total_revolving_balance    0.000000\n","total_revolving_trades     0.000000\n","total_revolving_util       0.001656\n","mortgage1_limit            0.185430\n","mortgage1_balance          0.185430\n","mortgage1_open             0.000000\n","mortgage2_open             0.000000\n","mortgage3_open             0.000000\n","mortgage4_open             0.000000\n","mortgage5_open             0.000000\n","total_mortgage_limit       0.180464\n","total_mortgage_balance     0.180464\n","total_mortgage_trades      0.000000\n","mortgage1_loan_to_value    0.185430\n","homeequity1_open           0.000000\n","homeequity2_open           0.000000\n","homeequity3_open           0.000000\n","homeequity4_open           0.000000\n","homeequity5_open           0.000000\n","total_homeequity_trades    0.000000\n","autoloan_open              0.000000\n","studentloan_open           0.000000\n","bankcard_open              0.000000\n","homeequity_open            0.000000\n","mortgage_open              0.000000\n","age                        0.000000\n","household_count            0.000000\n","person_count               0.000000\n","homebuyers                 0.000000\n","dtype: float64\n","0.18874172185430463\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"uiiie3VYuMZr","colab_type":"code","outputId":"85b56e65-5b5d-42b5-b1d4-9005b4f40d04","executionInfo":{"status":"ok","timestamp":1582406600036,"user_tz":300,"elapsed":20664,"user":{"displayName":"Qinyun Wu","photoUrl":"","userId":"06528085215566785782"}},"colab":{"base_uri":"https://localhost:8080/","height":71}},"source":["from sklearn.experimental import enable_iterative_imputer\n","from sklearn.impute import IterativeImputer\n","from sklearn.ensemble import RandomForestRegressor\n","imputer = IterativeImputer(estimator=RandomForestRegressor(),random_state=1000)\n","\n","impute_columns= imputer.fit_transform(data_final_apr[[\"bankcard_util\",\"total_revolving_util\",\"mortgage1_limit\",\"mortgage1_balance\",\"total_mortgage_limit\",\"total_mortgage_balance\",\"mortgage1_loan_to_value\"]])\n"],"execution_count":0,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/impute/_iterative.py:638: ConvergenceWarning: [IterativeImputer] Early stopping criterion not reached.\n","  \" reached.\", ConvergenceWarning)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"KgEoedzavvp6","colab_type":"code","outputId":"105c6b0d-d567-44ca-f494-b95c7cf5a798","executionInfo":{"status":"ok","timestamp":1582406854275,"user_tz":300,"elapsed":391,"user":{"displayName":"Qinyun Wu","photoUrl":"","userId":"06528085215566785782"}},"colab":{"base_uri":"https://localhost:8080/","height":731}},"source":["data_final_apr[\"bankcard_util\"]=impute_columns[:,0]\n","data_final_apr[\"total_revolving_util\"]=impute_columns[:,1]\n","data_final_apr[\"mortgage1_limit\"]=impute_columns[:,2]\n","data_final_apr[\"mortgage1_balance\"]=impute_columns[:,3]\n","data_final_apr[\"total_mortgage_limit\"]=impute_columns[:,4]\n","data_final_apr[\"total_mortgage_balance\"]=impute_columns[:,5]\n","data_final_apr[\"mortgage1_loan_to_value\"]=impute_columns[:,6]"],"execution_count":0,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"Entry point for launching an IPython kernel.\n","/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n","/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:3: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  This is separate from the ipykernel package so we can avoid doing imports until\n","/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:4: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  after removing the cwd from sys.path.\n","/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"\n","/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:6: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \n","/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py:7: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  import sys\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"l39uMtyqvynh","colab_type":"code","outputId":"2e2c6488-545c-469d-c9c1-f1af7f0a5324","executionInfo":{"status":"ok","timestamp":1582406874039,"user_tz":300,"elapsed":457,"user":{"displayName":"Qinyun Wu","photoUrl":"","userId":"06528085215566785782"}},"colab":{"base_uri":"https://localhost:8080/","height":646}},"source":["print(data_final_apr.isnull().sum(axis=0)/data_final_apr.shape[0])\n","print(sum(data_final_apr.isnull().sum(axis=1)!=0)/data_final_apr.shape[0])"],"execution_count":0,"outputs":[{"output_type":"stream","text":["zip5_apr                   0.0\n","bankcard_limit             0.0\n","bankcard_balance           0.0\n","bankcard_trades            0.0\n","bankcard_util              0.0\n","total_revolving_limit      0.0\n","total_revolving_balance    0.0\n","total_revolving_trades     0.0\n","total_revolving_util       0.0\n","mortgage1_limit            0.0\n","mortgage1_balance          0.0\n","mortgage1_open             0.0\n","mortgage2_open             0.0\n","mortgage3_open             0.0\n","mortgage4_open             0.0\n","mortgage5_open             0.0\n","total_mortgage_limit       0.0\n","total_mortgage_balance     0.0\n","total_mortgage_trades      0.0\n","mortgage1_loan_to_value    0.0\n","homeequity1_open           0.0\n","homeequity2_open           0.0\n","homeequity3_open           0.0\n","homeequity4_open           0.0\n","homeequity5_open           0.0\n","total_homeequity_trades    0.0\n","autoloan_open              0.0\n","studentloan_open           0.0\n","bankcard_open              0.0\n","homeequity_open            0.0\n","mortgage_open              0.0\n","age                        0.0\n","household_count            0.0\n","person_count               0.0\n","homebuyers                 0.0\n","dtype: float64\n","0.0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"txjYxyOjygQR","colab_type":"code","colab":{}},"source":["X = data_final_apr.loc[:, data_final_apr.columns != 'homebuyers']\n","y = data_final_apr.loc[:, data_final_apr.columns == 'homebuyers']\n","\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.model_selection import StratifiedKFold\n","def ML_pipeline_kfold_rf(X,y,random_state,n_folds):\n","    X_other, X_test, y_other, y_test = train_test_split(X, y, test_size=0.2,stratify=y,random_state = random_state)\n","    kf = StratifiedKFold(n_splits=n_folds,shuffle=True,random_state = random_state)\n","    CV_scores = []\n","    test_scores = []\n","    best_ds = []\n","    for train_index, CV_index in kf.split(X_other,y_other):\n","        X_train, X_CV = X_other.iloc[train_index.tolist()], X_other.iloc[CV_index.tolist()]\n","        y_train, y_CV = y_other.iloc[train_index.tolist()], y_other.iloc[CV_index.tolist()]\n","        \n","        \n","        # tune lasso hyper-parameter, alpha\n","        alpha = np.logspace(-4,2,num=20)\n","        train_score = []\n","        CV_score = []\n","        regs = []\n","        \n","        \n","        depth = [d for d in range(1,20)]\n","        split = [s for s in range(50,150,10)]\n","        dep_spl = [(d, s) for d in depth for s in split]\n","        \n","        for d, s in dep_spl:\n","            clf = RandomForestClassifier(n_estimators=100,max_depth=d,min_samples_split = s,random_state=random_state)\n","            clf.fit(X_train,y_train)\n","            train_score.append(clf.score(X_train,y_train))\n","            CV_score.append(clf.score(X_CV,y_CV))\n","            regs.append(clf)\n","            \n","       \n","        # find the best alpha in this fold\n","        best_d, best_s = dep_spl[np.argmax(CV_score)]\n","        best_ds.append((best_d, best_s))\n","        #print(best_d, best_s)\n","        # grab the best model\n","        reg = regs[np.argmax(CV_score)]\n","        CV_scores.append(np.max(CV_score))\n","        # calculate test score using thee best model\n","        test_scores.append(reg.score(X_test,y_test))\n","    \n","    best_best_ds = best_ds[np.argmax(test_scores)] \n","    return best_best_ds, test_scores\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"_mRQPF806FnL","colab_type":"code","outputId":"d59962d8-6881-48c4-b68f-1b409e62ea4e","executionInfo":{"status":"ok","timestamp":1582408716240,"user_tz":300,"elapsed":5306,"user":{"displayName":"Qinyun Wu","photoUrl":"","userId":"06528085215566785782"}},"colab":{"base_uri":"https://localhost:8080/","height":297}},"source":["demo_df = pd.read_csv(root_path + \"zip9_demographics_coded_pv.csv\")\n","demo_df.describe()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>zip5</th>\n","      <th>zip9_code</th>\n","      <th>age</th>\n","      <th>household_count</th>\n","      <th>person_count</th>\n","      <th>homebuyers</th>\n","      <th>first_homebuyers</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>6.009259e+06</td>\n","      <td>6.009259e+06</td>\n","      <td>6.009259e+06</td>\n","      <td>6.009259e+06</td>\n","      <td>6.009259e+06</td>\n","      <td>6.009259e+06</td>\n","      <td>6.009259e+06</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>5.088997e+04</td>\n","      <td>3.338460e+06</td>\n","      <td>4.605304e+01</td>\n","      <td>8.567926e+00</td>\n","      <td>1.607514e+01</td>\n","      <td>4.125450e-02</td>\n","      <td>2.327808e-02</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>2.989905e+04</td>\n","      <td>1.927403e+06</td>\n","      <td>7.934436e+00</td>\n","      <td>4.643224e+00</td>\n","      <td>9.329048e+00</td>\n","      <td>2.428791e-01</td>\n","      <td>1.741250e-01</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.001000e+03</td>\n","      <td>1.000000e+00</td>\n","      <td>2.157953e+01</td>\n","      <td>5.000000e+00</td>\n","      <td>5.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2.750200e+04</td>\n","      <td>1.669354e+06</td>\n","      <td>4.090032e+01</td>\n","      <td>6.000000e+00</td>\n","      <td>1.000000e+01</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>4.772500e+04</td>\n","      <td>3.338617e+06</td>\n","      <td>4.529680e+01</td>\n","      <td>7.000000e+00</td>\n","      <td>1.400000e+01</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>7.841300e+04</td>\n","      <td>5.007472e+06</td>\n","      <td>5.017651e+01</td>\n","      <td>1.000000e+01</td>\n","      <td>1.900000e+01</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>9.992100e+04</td>\n","      <td>6.676677e+06</td>\n","      <td>9.117380e+01</td>\n","      <td>1.712000e+03</td>\n","      <td>2.607000e+03</td>\n","      <td>1.500000e+01</td>\n","      <td>1.500000e+01</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["               zip5     zip9_code           age  household_count  \\\n","count  6.009259e+06  6.009259e+06  6.009259e+06  6.009259e+06      \n","mean   5.088997e+04  3.338460e+06  4.605304e+01  8.567926e+00      \n","std    2.989905e+04  1.927403e+06  7.934436e+00  4.643224e+00      \n","min    1.001000e+03  1.000000e+00  2.157953e+01  5.000000e+00      \n","25%    2.750200e+04  1.669354e+06  4.090032e+01  6.000000e+00      \n","50%    4.772500e+04  3.338617e+06  4.529680e+01  7.000000e+00      \n","75%    7.841300e+04  5.007472e+06  5.017651e+01  1.000000e+01      \n","max    9.992100e+04  6.676677e+06  9.117380e+01  1.712000e+03      \n","\n","       person_count    homebuyers  first_homebuyers  \n","count  6.009259e+06  6.009259e+06  6.009259e+06      \n","mean   1.607514e+01  4.125450e-02  2.327808e-02      \n","std    9.329048e+00  2.428791e-01  1.741250e-01      \n","min    5.000000e+00  0.000000e+00  0.000000e+00      \n","25%    1.000000e+01  0.000000e+00  0.000000e+00      \n","50%    1.400000e+01  0.000000e+00  0.000000e+00      \n","75%    1.900000e+01  0.000000e+00  0.000000e+00      \n","max    2.607000e+03  1.500000e+01  1.500000e+01      "]},"metadata":{"tags":[]},"execution_count":40}]},{"cell_type":"code","metadata":{"id":"sHQ5eeS16Lq1","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}